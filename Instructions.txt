Piece Tour Problem Tech Assignment TrueCaller

Problem:-
The assignment is to write a program that finds at least one tour for a chess piece on a 10-by-10 chessboard. A tour is a path for a piece to visit all tiles on the board, following a
set of rules for movement. Assume the piece can start in any tile.
The four rules of movement for the piece are:
a) The piece can move 3 spaces either North, East, South, or West.
b) The piece can move 2 spaces diagonally: Northeast, Southeast, Southwest, or Northwest.
c) Each space can only be visited once.

Solution
I solved the problem using Warnsdorff's rule.

Warnsdorff's rule (source Wikipedia)
Warnsdorff's rule is a heuristic for finding a single knight's tour.
The knight is moved so that it always proceeds to the square from which the knight will have the fewest onward moves.
When calculating the number of onward moves for each candidate square, we do not count moves that revisit any square already visited.

Algorithm
1.Set the start piece with value 1
2.Look at validNextMoves Array and find out the valid next moves possible
3.For the valid next moves find the move with the least number of onward moves(having least number of adjacent/next valid moves)
4.Set tileCOunter+1 as the position for this tile.
5.Set the nextTile as the current found Tile
6.Continue Step 2 to 5 till tileCounter reaches (NumberOfRows*NumberOfColumns)-1  as the LIMIT.
Prerequisites:
For test and run this project you just need to have mvn command in your path.

Run all tests:
To run tests please use below command
mvn test

To Run application
1.Navigate to PieceTourProblem\src\main\java\com\truecaller\tech\test\PieceTourPathApplication.java
2.Right click Run
3.You will see Board Printed only if a Piece Tour Path Exists.